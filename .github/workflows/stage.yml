name: Stage release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Bump version by segment:'
        required: true
        default: 'minor'
        type: choice
        options:
          - 'major'
          - 'minor'
      skipPerform:
        description: 'Skip release perform'
        required: false
        default: false
        type: boolean

jobs:
  perform-release:
    runs-on: ubuntu-latest

    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Set GitHub Actions as commit author
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Get initial version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "::set-output name=version::$VERSION"
        id: initial_version

      - name: Resolve release version
        run: |
          mvn build-helper:parse-version versions:set -DnewVersion=${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "::set-output name=version::$VERSION"
        id: release_version

      - name: Bump next minor development version
        if: ${{ inputs.releaseType == 'minor' }}
        run: mvn build-helper:parse-version versions:set -DnewVersion=${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.0-SNAPSHOT

      - name: Bump next major development version
        if: ${{ inputs.releaseType == 'major' }}
        run: mvn build-helper:parse-version versions:set -DnewVersion=${parsedVersion.nextMajorVersion}.0.0-SNAPSHOT

      - name: Resolve development version
        run: |
          VERSION=$( mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
          echo "::set-output name=version::$VERSION"
        id: development_version

      - name: Reset to initial version
        run: mvn versions:set -DnewVersion=${{ steps.initial_version.outputs.version }}

      - name: Perform Maven Relese
        run: 
          mvn release:clean release:prepare release:perform 
            -DreleaseVersion=${{ steps.release_version.outputs.version }} 
            -DdevelopmentVersion=${{ steps.development_version.outputs.version }} 
            -Darguments="-Dmaven.javadoc.skip=true -Dmaven.deploy.skip=true"
